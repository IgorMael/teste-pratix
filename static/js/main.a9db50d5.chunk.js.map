{"version":3,"sources":["api/pratixApi.js","components/cardService/cardService.js","components/loading/LoadingSpinner.js","components/listServices/listServices.js","actions/index.js","components/searchBar/searchBar.js","containers/Services.js","components/header/Header.js","App.js","reducers/serviceReducer.js","reducers/index.js","store/index.js","index.js"],"names":["pratixAPI","axios","create","baseURL","headers","Content-Type","CardService","_this$props$data","this","props","data","atuacao","radar","security","status","react_default","a","createElement","Card_default","className","Header","area","Body","afiliado","Subtitle","servicos","map","servico","key","cidade","estado","email","estrelas","React","Component","LoadingSpinner","_","Spinner_default","animation","variant","ListServices","renderCards","service","_this","filter","item","toLowerCase","search","query","length","slice","pageSize","page","index","cardService_cardService","_this2","window","onscroll","debounce","innerHeight","document","documentElement","scrollTop","offsetHeight","loadMore","getServiceList","loadScrollListener","components_loading_LoadingSpinner","connect","state","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","pratixApi","get","sent","type","payload","stop","_x","apply","arguments","SearchBar","onSubmitQuery","event","preventDefault","onSubmit","InputGroup_default","size","FormControl_default","value","onChange","e","updateQuery","target","placeholder","aria-label","Append","Button_default","Servicos","Container_default","Row_default","style","marginTop","Col_default","md","span","offset","searchBar","listServices_listServices","Navbar_default","bg","Brand","href","Nav_default","Link","App","header_Header","Services","defaultState","combineReducers","undefined","action","objectSpread","persistConfig","storage","whitelist","reducers","persistReducer","rootReducers","store","createStore","compose","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.a9db50d5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst pratixAPI = axios.create({\r\n  baseURL: 'https://api.pratix.top/api',\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\nexport default pratixAPI;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport './cardService.css';\r\n\r\nclass CardService extends React.Component {\r\n  render() {\r\n    const { atuacao, radar, security, status } = this.props.data;\r\n    return (\r\n      <Card className=\"CardService\">\r\n        <Card.Header>{atuacao.area || 'AFILIADO'}</Card.Header>\r\n        <Card.Body className={{ afiliado: !atuacao.area }}>\r\n          <Card.Subtitle className=\"mb-2\">\r\n            {atuacao &&\r\n              atuacao.servicos.map(servico => (\r\n                <span className=\"services\" key={servico}>\r\n                  {servico}\r\n                </span>\r\n              ))}\r\n          </Card.Subtitle>\r\n          <div className=\"info text-muted\">\r\n            <p>\r\n              {radar.cidade} - {radar.estado}\r\n            </p>\r\n            <p>{status.email}</p>\r\n            <p className=\"stars\">{security.estrelas}â˜…</p>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardService;\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './LoadingSpinner.css';\r\nconst LoadingSpinner = _ => {\r\n  return (\r\n    <div className=\"loading-spinner\">\r\n      {' '}\r\n      <Spinner\r\n        className=\"custom-spinner\"\r\n        animation=\"border\"\r\n        variant=\"primary\"\r\n      />{' '}\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getServiceList, loadMore } from '../../actions';\r\nimport CardService from '../cardService/cardService';\r\nimport LoadingSpinner from '../loading/LoadingSpinner';\r\nimport debounce from 'lodash/debounce';\r\nimport './listServices.css';\r\n\r\nclass ListServices extends React.Component {\r\n  loadScrollListener() {\r\n    window.onscroll = debounce(() => {\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop ===\r\n        document.documentElement.offsetHeight\r\n      ) {\r\n        this.props.loadMore();\r\n      }\r\n    }, 900);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getServiceList();\r\n    this.loadScrollListener();\r\n  }\r\n\r\n  renderCards = _ => {\r\n    const { service } = this.props;\r\n    return service.data\r\n      .filter(\r\n        item =>\r\n          item.atuacao &&\r\n          item.atuacao.servicos.filter(servico => {\r\n            return (\r\n              servico.toLowerCase().search(service.query.toLowerCase()) !== -1\r\n            );\r\n          }).length > 0\r\n      )\r\n      .slice(0, service.pageSize * service.page)\r\n      .map((item, index) => <CardService key={index} data={item} />);\r\n  };\r\n\r\n  render() {\r\n    return this.props.service && this.props.service.data ? (\r\n      <div className=\"ListService\">{this.renderCards()}</div>\r\n    ) : (\r\n      <LoadingSpinner />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = state => {\r\n  return { service: state.service };\r\n};\r\n\r\nexport default connect(\r\n  mapDispatchToProps,\r\n  { getServiceList, loadMore }\r\n)(ListServices);\r\n","import pratixApi from '../api/pratixApi';\r\n\r\nexport const getServiceList = _ => async dispatch => {\r\n  const response = await pratixApi.get(\r\n    '/geo/get/simple/radio/40/-3.7553375/-38.6296543'\r\n  );\r\n\r\n  dispatch({\r\n    type: 'GET_SERVICES',\r\n    payload: response.data\r\n  });\r\n};\r\n\r\nexport const updateQuery = query => dispatch =>\r\n  dispatch({\r\n    type: 'UPDATE_QUERY',\r\n    payload: query\r\n  });\r\n\r\nexport const loadMore = _ => dispatch =>\r\n  dispatch({\r\n    type: 'LOAD_MORE'\r\n  });\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateQuery } from '../../actions';\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nclass SearchBar extends React.Component {\r\n  onSubmitQuery = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.props.service;\r\n    return (\r\n      <form onSubmit={event => this.onSubmitQuery(event)}>\r\n        <InputGroup size=\"lg\" className=\"mb-3\">\r\n          <FormControl\r\n            value={query}\r\n            onChange={e => this.props.updateQuery(e.target.value)}\r\n            placeholder=\"Buscar serviÃ§o\"\r\n            aria-label=\"Buscar serviÃ§o\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Buscar\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = state => {\r\n  return { service: state.service };\r\n};\r\n\r\nexport default connect(\r\n  mapDispatchToProps,\r\n  { updateQuery }\r\n)(SearchBar);\r\n","import React from 'react';\r\n\r\nimport ListServices from '../components/listServices/listServices';\r\nimport SearchBar from '../components/searchBar/searchBar';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Servicos extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"Services\">\r\n        <Row>\r\n          <h2 style={{ marginTop: ' 30px' }}>Pratix</h2>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <SearchBar />\r\n          </Col>\r\n        </Row>\r\n        <ListServices />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Servicos;\r\n","import React from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Pratix</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Servicos from './containers/Services';\nimport Header from './components/header/Header';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Servicos />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const defaultState = {\r\n  page: 1,\r\n  pageSize: 10,\r\n  query: ''\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_SERVICES':\r\n      return { ...state, ...action.payload };\r\n    case 'UPDATE_QUERY':\r\n      return { ...state, ...defaultState, query: action.payload };\r\n    case 'LOAD_MORE':\r\n      return state.data.filter(\r\n        item =>\r\n          item.atuacao &&\r\n          item.atuacao.servicos.filter(servico => {\r\n            return (\r\n              servico.toLowerCase().search(state.query.toLowerCase()) !== -1\r\n            );\r\n          }).length > 0\r\n      ).length >\r\n        state.page * state.pageSize\r\n        ? { ...state, page: state.page + 1 }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport serviceReducer from './serviceReducer';\r\n\r\nexport default combineReducers({ service: serviceReducer });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from '../reducers';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: []\r\n};\r\nconst reducers = persistReducer(persistConfig, rootReducers);\r\n\r\nconst store = createStore(reducers, undefined, compose(applyMiddleware(thunk)));\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}